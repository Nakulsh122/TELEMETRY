this will be a module to see the capabilities an testing making a gui using a arduino board 
any MCU ( Micro controller unit ) can be used .
the steps in the series will be :
    connecting with the board.
    Communicate with the board.
    Display the outputs.
    Record the output.
    Transform the data , apply filters 
    Manage and add security to the data and the software.

Libraries used : 
    Tkinter 
    Matplot Lib
    numpy
    scipy

Concepts : 
    OOPS
    Data Conversion
    Threading 

Layers of the program :
    User Interface.
    Tkinter 
        frames
            connection
            widgets 
            display
    Matplot Lib
    Data Transformation 
        numpy
        scipy
        data filtering 
        Value Conversion
    Threading
    PySerial
        connection
        data recieve , Transmit 
        Serial Setup
    Communication Protocols
        Synchronise
        Start Stream
        Stop Stream
    Embedded Code
        Management 
        Message contruction


During connection with the arduino it will send some messages and we will encode the stream.    

Communication Protocol 

UART Message = "#(seperator) !(code) #(seperator)" + "\n(termination character)"

PC -> UART message("#?#\n) -> MCU // query the no of channels present;

MCU stops execution of other tasks and then returns the no of channels that are present 

MCU -> UART message("#!#n#\n") -> PC

PC -> #A#\n -> MCU

MCU will start sending the data with the messages with n segments 
some of the chars k;

MCU -> #D#d1#d2#...#dn#K#\n -> PC

K - sum of the chars that are present in the message 

PC -> #S#\n -> MCU stop streaming 

Thread Operations : 

Main thread manages the GUI and the program logic 

New thread : will be parallel to the main and then it will obtain the data from the serial 

Chart frame Logics : 
